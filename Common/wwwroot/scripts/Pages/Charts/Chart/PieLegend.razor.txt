@page "/chart/pie-legend"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;

<SampleDescription>
    <p>This sample shows statistics on expenditure made in a year using the donut chart with legends shown at the right side of the chart.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render a doughnut chart with legends. You can use <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.AccumulationChartSeries.html#Syncfusion_Blazor_Charts_AccumulationChartSeries_Radius'>Radius</a> and <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.AccumulationChartSeries.html#Syncfusion_Blazor_Charts_AccumulationChartSeries_InnerRadius'>InnerRadius</a> properties to render the doughnut. Here, the legend text is wrapped using the <code>TextWrap</code> property.</p>
    <p>More information about the legend feature can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/accumulation-chart/legend'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <SfAccumulationChart  EnableBorderOnMouseMove="false" SelectionMode="AccumulationSelectionMode.Point" Theme="@Theme">
        <AccumulationChartTooltipSettings Enable="false"></AccumulationChartTooltipSettings>
        <AccumulationChartLegendSettings ToggleVisibility=false Position="LegendPosition.Right" TextWrap="@TextWrap.Wrap" MaximumLabelWidth="100" Height="28%" Width="36%"></AccumulationChartLegendSettings>
        <AccumulationChartSeriesCollection>
            <AccumulationChartSeries DataSource="@PieChartPoints" XName="ExpenseCategory" YName="ExpensePercentage" Name="Revenue" InnerRadius="40%">
                <AccumulationDataLabelSettings Name="DataLabelMappingName" Visible="true">
                    <AccumulationChartDataLabelFont Size="13px" FontWeight="600" Color="white"></AccumulationChartDataLabelFont>
                </AccumulationDataLabelSettings>
            </AccumulationChartSeries>
        </AccumulationChartSeriesCollection>
        <AccumulationChartAnnotations>
            <AccumulationChartAnnotation Region="Regions.Series" X="50%" Y="50%">
                <ContentTemplate>
                    <div style="font-size:15px;font-weight:600" id="annotation">
                        Expense in Year
                    </div>
                </ContentTemplate>
            </AccumulationChartAnnotation>
        </AccumulationChartAnnotations>
    </SfAccumulationChart>
</div>

@code{

    private Theme Theme { get; set; }
    public List<PieData> PieChartPoints { get; set; } = new List<PieData>
    {
         new PieData { ExpenseCategory =  "Net-tution", ExpensePercentage = 21, DataLabelMappingName = "21%" },
         new PieData { ExpenseCategory =  "Private Gifts", ExpensePercentage = 8, DataLabelMappingName = "8%" },
         new PieData { ExpenseCategory =  "All Other", ExpensePercentage = 9, DataLabelMappingName = "9%" },
         new PieData { ExpenseCategory =  "Local Revenue", ExpensePercentage = 5, DataLabelMappingName = "5%" },
         new PieData { ExpenseCategory =  "State Revenue", ExpensePercentage = 21, DataLabelMappingName = "21%" },
         new PieData { ExpenseCategory =  "Federal Revenue", ExpensePercentage = 16, DataLabelMappingName = "16%" },
         new PieData { ExpenseCategory =  "Self-supporting Operations", ExpensePercentage = 21, DataLabelMappingName = "21%" },
    };

    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }

    public class PieData
    {
        public string ExpenseCategory { get; set; }
        public double ExpensePercentage { get; set; }
        public string DataLabelMappingName { get; set; }
    }
}
