@page "/file-manager/sql-server-provider"

@using Syncfusion.Blazor.FileManager;

@inject IJSRuntime JsRuntime;

@inherits SampleBaseComponent;

<SampleDescription>
	<p>This sample demonstrates how to utilize the <a target="_blank" href="https://github.com/SyncfusionExamples/sql-server-database-aspcore-file-provider">SQL server file system provider</a> with the File Manager component. To run the service, configure the SQL server database connection using the <code>SetSQLConnection</code> method to set the <code>connection name</code>, <code>table name</code>, and <code>rootid</code> of the SQL table.</p>
</SampleDescription>
<ActionDescription>
	<p>The <a target='_blank' href='https://www.syncfusion.com/blazor-components/blazor-file-manager'>Blazor File Manager </a> component is used to explore a file system through a web application, similar to the windows explorer for windows. It supports all the basic file operations such as <code>create</code>, <code>rename</code>, <code>delete</code>, <code>refresh</code> and so on.</p>

	<p><b>Note: </b>The File Manager’s upload functionality is restricted in online demo. To work with upload functionality, please download <a target="_blank" href="https://github.com/SyncfusionExamples/sql-server-database-aspcore-file-provider">SQL Database Provider</a> from the GitHub repository.</p>
</ActionDescription>

<div class="control-section">
	@* Initialization of File Manager component with SQL server file provider *@
	<SfFileManager TValue="FileManagerDirectoryContent">
		<FileManagerAjaxSettings Url="https://ng2jq.syncfusion.com/ej2-sql-service/api/FileManager/Fileoperations"
								 UploadUrl="https://ng2jq.syncfusion.com/ej2-sql-service/api/FileManager/Upload"
								 DownloadUrl="https://ng2jq.syncfusion.com/ej2-sql-service/api/FileManager/Download"
								 GetImageUrl="https://ng2jq.syncfusion.com/ej2-sql-service/api/FileManager/GetImage">
		</FileManagerAjaxSettings>
	</SfFileManager>
</div>
